//-----------------------------------------------------------------------------
// File: packcage.cpp
//-----------------------------------------------------------------------------
#include "packcage.h"
//-----------------------------------------------------------------------------
using namespace std;
//-----------------------------------------------------------------------------
void Randomize()
{ srand((unsigned)time(NULL)); }
//-----------------------------------------------------------------------------
int iRandom( int a, int b )
{ return a + (b - a + 1) * rand() / RAND_MAX ; }   
//-----------------------------------------------------------------------------
double dRandom( int a, int b )
{ return a + (b - a) * rand() / (double)RAND_MAX; }   
//-----------------------------------------------------------------------------
// Ввод данных
//-----------------------------------------------------------------------------
void InputData(int &size, int &dif)
{
	Randomize();
	cout << "Input array size: ";
	cin >> size;
	while (size <= 0) {
		cout << "Incorrect size, repeat: ";
		cin >> size;
	}
	cout << "Input difficulty: ";
	cin >> dif;
}
//-----------------------------------------------------------------------------
void GenerateArr(int *m, int s, int dif) // Генерация массива данных (int)
{	
	switch (dif) {
		case 0:
			for (int i = 0; i < s; ++i)
				m[i] = i;      // лучший случай (отсортирован)
			break;
		case 1:
			for (int i = 0; i < s; ++i) // случайный набор данных
				m[i] = iRandom(-999, 999);
			break;
		case 2:
			for (int i = 0; i < s; ++i)
				m[i] = s - i;  // худший случай (инвертирован)
			break;
		case 3:
			for (int i = 0; i < s; ++i)
				cin >> m[i];   // Ввод от юзера
			break;
		default:
			for (int i = 0; i < s; ++i)
				m[i] = 0;      // заполнить 0-ми
	}
}
//-----------------------------------------------------------------------------
void GenerateArr(double *m, int s, int dif) // Генерация массива данных
{	
	switch (dif) {
		case 0:
			for (int i = 0; i < s; ++i)
				m[i] = i;      // лучший случай (отсортирован)
			break;
		case 1:
			for (int i = 0; i < s; ++i) // случайный набор данных
				m[i] = dRandom(-999, 999);
			break;
		case 2:
			for (int i = 0; i < s; ++i)
				m[i] = s - i;  // худший случай (инвертирован)
			break;
		case 3:
			for (int i = 0; i < s; ++i)
				cin >> m[i];   // Ввод от юзера
			break;
		default:
			for (int i = 0; i < s; ++i)
				m[i] = 0;      // заполнить 0-ми
	}
}
//-----------------------------------------------------------------------------
void PrintArr(int *a, int size) // Печать массива данных (int)
{
	for (int i = 0; i < size; ++i)
		cout << a[i] << " ";
	cout << endl;
}
//-----------------------------------------------------------------------------
void PrintArr(double *a, int size) // Печать массива данных
{
	for (int i = 0; i < size; ++i)
		cout << a[i] << " ";
	cout << endl;
}
//-----------------------------------------------------------------------------